#include <stdio.h>
#include <stdlib.h>
#include <time.h>

// Function to generate a random key
void generate_key(int *key, int length) {
    for (int i = 0; i < length; i++) {
        key[i] = rand() % 26;
    }
}

// Function to encrypt using one-time pad Vigenère cipher
void encrypt(char *plaintext, int *key, char *ciphertext, int length) {
    for (int i = 0; i < length; i++) {
        ciphertext[i] = (plaintext[i] - 'a' + key[i]) % 26 + 'a';
    }
    ciphertext[length] = '\0';
}

// Function to decrypt using one-time pad Vigenère cipher
void decrypt(char *ciphertext, int *key, char *plaintext, int length) {
    for (int i = 0; i < length; i++) {
        plaintext[i] = (ciphertext[i] - 'a' - key[i]) % 26 + 'a';
    }
    plaintext[length] = '\0';
}

int main() {
    srand(time(NULL)); // Seed the random number generator

    char plaintext[] = "hello";
    int length = strlen(plaintext);

    int *key = (int *)malloc(length * sizeof(int));
    generate_key(key, length);

    char ciphertext[length + 1];
    encrypt(plaintext, key, ciphertext, length);

    printf("Plaintext: %s\n", plaintext);
    printf("Key: ");
    for (int i = 0; i < length; i++) {
        printf("%d ", key[i]);
    }
    printf("\n");
    printf("Ciphertext: %s\n", ciphertext);

    char decrypted[length + 1];
    decrypt(ciphertext, key, decrypted, length);

    printf("Decrypted: %s\n", decrypted);

    free(key);

    return 0;
}
