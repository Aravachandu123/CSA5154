#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Function to encrypt the plaintext using the Vigen√®re cipher
void encrypt(char plaintext[], char keyword[], char ciphertext[]) {
    int textLength = strlen(plaintext);
    int keywordLength = strlen(keyword);
    int i, j = 0;

    for (i = 0; i < textLength; i++) {
        if (isalpha(plaintext[i])) {
            char offset = isupper(plaintext[i]) ? 'A' : 'a';
            char keyOffset = isupper(keyword[j % keywordLength]) ? 'A' : 'a';
            ciphertext[i] = ((plaintext[i] - offset + (keyword[j % keywordLength] - keyOffset)) % 26) + offset;
            j++;
        } else {
            ciphertext[i] = plaintext[i];
        }
    }
    ciphertext[i] = '\0'; // Null-terminate the ciphertext
}

int main() {
    char plaintext[100];
    char keyword[100];
    char ciphertext[100];

    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = 0; // Remove the trailing newline

    printf("Enter the keyword: ");
    fgets(keyword, sizeof(keyword), stdin);
    keyword[strcspn(keyword, "\n")] = 0; // Remove the trailing newline

    // Encrypt the plaintext
    encrypt(plaintext, keyword, ciphertext);

    // Output the result
    printf("Ciphertext: %s\n", ciphertext);

    return 0;
}
